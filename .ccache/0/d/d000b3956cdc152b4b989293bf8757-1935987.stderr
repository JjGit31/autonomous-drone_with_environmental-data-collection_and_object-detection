In file included from /home/Rpi/YDLidar-SDK/src/GSLidarDriver.h:58,
                 from /home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:37:
/home/Rpi/YDLidar-SDK/./core/base/thread.h: In member function ‘int ydlidar::core::base::Thread::join(long unsigned int)’:
/home/Rpi/YDLidar-SDK/./core/base/thread.h:135:46: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘_size_t’ {aka ‘long unsigned int’} [-Wformat=]
  135 |           printf("[YDLIDAR DEBUG] Thread [0x%X] ready to cancel[%d]\n", _handle, s);
      |                                             ~^                          ~~~~~~~
      |                                              |                          |
      |                                              unsigned int               _size_t {aka long unsigned int}
      |                                             %lX
/home/Rpi/YDLidar-SDK/./core/base/thread.h:137:46: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘_size_t’ {aka ‘long unsigned int’} [-Wformat=]
  137 |           printf("[YDLIDAR DEBUG] Thread [0x%X] ready to cancel[%d] time[%u]\n",
      |                                             ~^
      |                                              |
      |                                              unsigned int
      |                                             %lX
  138 |             _handle, s, getms() - t);
      |             ~~~~~~~                           
      |             |
      |             _size_t {aka long unsigned int}
/home/Rpi/YDLidar-SDK/./core/base/thread.h:141:42: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘_size_t’ {aka ‘long unsigned int’} [-Wformat=]
  141 |             printf("[YDLIDAR] Thread [0x%X] has been canceled in other thread\n", _handle);
      |                                         ~^                                        ~~~~~~~
      |                                          |                                        |
      |                                          unsigned int                             _size_t {aka long unsigned int}
      |                                         %lX
/home/Rpi/YDLidar-SDK/./core/base/thread.h:146:74: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 3 has type ‘_size_t’ {aka ‘long unsigned int’} [-Wformat=]
  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x%X] cancelled!\n", _handle);
      |                                                                         ~^                 ~~~~~~~
      |                                                                          |                 |
      |                                                                          unsigned int      _size_t {aka long unsigned int}
      |                                                                         %lX
/home/Rpi/YDLidar-SDK/./core/base/thread.h:150:40: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘_size_t’ {aka ‘long unsigned int’} [-Wformat=]
  150 |           printf("[YDLIDAR] Thread [0x%X] has been canceled\n", _handle);
      |                                       ~^                        ~~~~~~~
      |                                        |                        |
      |                                        unsigned int             _size_t {aka long unsigned int}
      |                                       %lX
In file included from /home/Rpi/YDLidar-SDK/src/GSLidarDriver.h:60,
                 from /home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:37:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h: In function ‘void ydlidar::core::common::debug(char*, ...)’:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:96:10: warning: format not a string literal and no format arguments [-Wformat-security]
   96 |   printf(buff); \
      |          ^~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:105:3: note: in expansion of macro ‘FORMAT_STDOUT’
  105 |   FORMAT_STDOUT
      |   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h: In function ‘void ydlidar::core::common::info(char*, ...)’:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:96:10: warning: format not a string literal and no format arguments [-Wformat-security]
   96 |   printf(buff); \
      |          ^~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:115:3: note: in expansion of macro ‘FORMAT_STDOUT’
  115 |   FORMAT_STDOUT
      |   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h: In function ‘void ydlidar::core::common::warn(char*, ...)’:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:96:10: warning: format not a string literal and no format arguments [-Wformat-security]
   96 |   printf(buff); \
      |          ^~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:125:3: note: in expansion of macro ‘FORMAT_STDOUT’
  125 |   FORMAT_STDOUT
      |   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h: In function ‘void ydlidar::core::common::error(char*, ...)’:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:96:10: warning: format not a string literal and no format arguments [-Wformat-security]
   96 |   printf(buff); \
      |          ^~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:136:3: note: in expansion of macro ‘FORMAT_STDOUT’
  136 |   FORMAT_STDOUT
      |   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h: In function ‘bool ydlidar::core::common::printfDeviceInfo(const device_info&, int)’:
/home/Rpi/YDLidar-SDK/./core/common/ydlidar_help.h:1111:8: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1111 |   info("%s device info\n"
      |        ^~~~~~~~~~~~~~~~~~
 1112 |          "Firmware version: %u.%u\n"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1113 |          "Hardware version: %u\n"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~
 1114 |          "Model: %s\n"
      |          ~~~~~~~~~~~~~
 1115 |          "Serial: %s",
      |          ~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘result_t ydlidar::GSLidarDriver::waitPackage(node_info*, uint32_t)’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:808:39: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  808 |                                 error("GS cs 0x%02X != 0x%02X", CheckSumCal, CheckSum);
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:838:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  838 |                 debug("GS lidar module[%d] model[%u]", moduleNum, model);
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:894:35: warning: taking address of packed member of ‘node_info’ may result in an unaligned pointer value [-Waddress-of-packed-member]
  894 |                     &sampleAngle, &(*node).dist);
      |                                   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:897:35: warning: taking address of packed member of ‘node_info’ may result in an unaligned pointer value [-Waddress-of-packed-member]
  897 |                     &sampleAngle, &(*node).dist);
      |                                   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:900:35: warning: taking address of packed member of ‘node_info’ may result in an unaligned pointer value [-Waddress-of-packed-member]
  900 |                     &sampleAngle, &(*node).dist);
      |                                   ^~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘result_t ydlidar::GSLidarDriver::setDeviceAddress(uint32_t)’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1321:14: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1321 |         info("GS lidar count %u", moduleCount);
      |              ^~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘result_t ydlidar::GSLidarDriver::createThread()’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1437:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1437 |         error("Fail to create GS thread");
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1441:10: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1441 |     info("Create GS thread 0x%X", m_thread->get_id());
      |          ^~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘virtual result_t ydlidar::GSLidarDriver::getDeviceInfo(std::vector<device_info_ex>&, uint32_t)’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1564:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1564 |         error("Fail to get GS lidar count");
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘virtual result_t ydlidar::GSLidarDriver::getDeviceInfo2(device_info&, uint32_t)’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1705:14: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1705 |         info("Get Module[%d] Lidar model[%u]", id, di.model);
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘virtual bool ydlidar::GSLidarDriver::ota()’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1761:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1761 |         error("[OTA] Not set OTA file");
      |               ^~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1769:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1769 |         error("[OTA] Fail to open OTA file[%s]", m_OtaName.c_str());
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1783:10: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1783 |     info("[OTA] File size [%.02lf]KB", data.size() / 1024.0);
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1792:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1792 |             error("[OTA] 0x%02X Fail to Start OTA", addr);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1799:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1799 |             error("[OTA] 0x%02X Fail to download data", addr);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1806:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1806 |             error("[OTA] 0x%02X Fail to Start OTA", addr);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1813:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1813 |             error("[OTA] 0x%02X Fail to restart gs lidar", addr);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1817:14: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1817 |         info("[OTA] 0x%02X Success to finish OTA", addr);
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp: In member function ‘bool ydlidar::GSLidarDriver::execOta(uint8_t, const std::vector<unsigned char>&)’:
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1870:18: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1870 |             info("[OTA] Downloading [%d%%]", p);
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/Rpi/YDLidar-SDK/src/GSLidarDriver.cpp:1905:19: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 1905 |             error("[OTA] Fail to download [%d] package", j + 1);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
